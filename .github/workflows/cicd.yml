# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven and Flutter CI

on:
  push:
    branches:
      - "main"
      - "develop"
      - "feature/**"
  pull_request:
    branches:
      - "main"
      - "develop"
      - "feature/**"

jobs:

  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: tele-med
          MYSQL_HOST: localhost
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build and Test Authentication with Maven
        run: mvn -B package --file backend/auth-microservice/pom.xml
      - name: Build and Test Application with Maven
        run: mvn -B package --file backend/appointment-microservice/pom.xml

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v1

      - name: Check Flutter version
        run: flutter --version

      - run: flutter pub get
        working-directory: ./frontend

      - run: flutter test
        working-directory: ./frontend

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Images to Docker
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/auth-microservice:latest ./backend/auth-microservice
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/auth-microservice:latest
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/appointment-microservice:latest ./backend/appointment-microservice
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/appointment-microservice:latest
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/prescription-microservice:latest ./backend/prescription-microservice
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/prescription-microservice:latest
